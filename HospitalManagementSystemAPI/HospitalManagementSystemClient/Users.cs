using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using System;
using System.Collections.Generic;

//Nyamburas + MurphreeS 
//User Model for MongoDB Client
// Used in the WinForms application
// Mirrors the structure of the MongoDB document in 'userData' collection
// Users.cs - Client-side model for MongoDB documents
// NOTE: This model is duplicated from the API because the API is .NET Core and cannot be directly referenced from WinForms
// (.NET Framework).
// This file must stay in sync with the structure of documents in the 'userData' MongoDB collection in the 'HospitalManagementDB'.


namespace HospitalManagementSystemClient.Models
{
    public enum Permission
    {
        ScheduleApp,
        ViewMedicalHistory,
        ManageInventory,
        AccessReports,
        ManageStaff,
        ViewVitals,
        ManageAdmissions,
        ManageAppointments,
        ManageBeds,
        ManageDepartments,
        ManageUsers
    }

    public enum Role
    {
        Doctor,
        Nurse,
        AdministrativeStaff,
        Patient,
        Administrator
    }

    public class Users
    {
        [BsonId]  //MongoDB autogenerated ID 
        [BsonRepresentation(BsonType.ObjectId)]
        [BsonElement("_id")]
        public string UserId { get; set; }

        //username for login
        [BsonElement("Username")]
        public string Username { get; set; }

        [BsonElement("Email")]
        public string Email { get; set; }

        // Plain-text password for now (in production, considering hashing)
        [BsonElement("Password")]
        public string Password { get; set; }

        [BsonElement("Roles"), BsonRepresentation(MongoDB.Bson.BsonType.String)] //string shown intead of array number in mongoDB
        public List<Role> Roles { get; set; }

        [BsonElement("Permissions"), BsonRepresentation(MongoDB.Bson.BsonType.String)] //string shown instead of array number in mongoDB
        public List<Permission> Permissions { get; set; }

        [BsonElement("Profile")]
        public Profile Profile { get; set; }

        [BsonElement("CreatedAt")]
        public DateTime CreatedAt { get; set; }

        [BsonElement("UpdatedAt")]
        public DateTime UpdatedAt { get; set; }
    }

    public class Profile
    {
        [BsonElement("FullName")]
        public string FullName { get; set; }

        [BsonElement("Phone")]
        public string Phone { get; set; }

        [BsonElement("Address")]
        public string Address { get; set; }
    }
}
